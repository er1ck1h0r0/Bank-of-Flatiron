{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/eric/Development/code/phase-2/Challenge-1-Bank-of-Flatiron-021023 (1)/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction AddTransactionForm() {\n  _s();\n\n  const [date, setDate] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n\n  function handleSubmit(e) {\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: date,\n        description: description,\n        category: category,\n        amount: amount\n      })\n    });\n    alert(\"added successfully\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: date,\n          onChange: e => setDate(e.target.value),\n          type: \"date\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: category,\n          onChange: e => setCategory(e.target.value),\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"R1FiiSMYEmUInYnsopU/p4tML2Y=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/home/eric/Development/code/phase-2/Challenge-1-Bank-of-Flatiron-021023 (1)/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AddTransactionForm.js"],"names":["React","useState","Transaction","AddTransactionForm","date","setDate","description","setDescription","category","setCategory","amount","setAmount","handleSubmit","e","fetch","method","headers","body","JSON","stringify","alert","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AACA,WAASW,YAAT,CAAsBC,CAAtB,EAAyB;AACvBC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBf,QAAAA,IAAI,EAAEA,IADa;AAEnBE,QAAAA,WAAW,EAAEA,WAFM;AAGnBE,QAAAA,QAAQ,EAAEA,QAHS;AAInBE,QAAAA,MAAM,EAAEA;AAJW,OAAf;AALoC,KAAvC,CAAL;AAYCU,IAAAA,KAAK,CAAC,oBAAD,CAAL;AACF;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAER,YAAhB;AAA8B,MAAA,SAAS,EAAC,SAAxC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAO,UAAA,KAAK,EAAER,IAAd;AAAoB,UAAA,QAAQ,EAAGS,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACQ,MAAF,CAASC,KAAV,CAA5C;AAA8D,UAAA,IAAI,EAAC,MAAnE;AAA0E,UAAA,IAAI,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,KAAK,EAAEhB,WAAd;AAA2B,UAAA,QAAQ,EAAGO,CAAD,IAAON,cAAc,CAACM,CAAC,CAACQ,MAAF,CAASC,KAAV,CAA1D;AAA4E,UAAA,IAAI,EAAC,MAAjF;AAAwF,UAAA,IAAI,EAAC,aAA7F;AAA2G,UAAA,WAAW,EAAC;AAAvH;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,KAAK,EAAEd,QAAd;AAAwB,UAAA,QAAQ,EAAGK,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACQ,MAAF,CAASC,KAAV,CAApD;AAAsE,UAAA,IAAI,EAAC,MAA3E;AAAkF,UAAA,IAAI,EAAC,UAAvF;AAAkG,UAAA,WAAW,EAAC;AAA9G;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAO,UAAA,KAAK,EAAEZ,MAAd;AAAsB,UAAA,QAAQ,EAAGG,CAAD,IAAOF,SAAS,CAACE,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAhD;AAAkE,UAAA,IAAI,EAAC,QAAvE;AAAgF,UAAA,IAAI,EAAC,QAArF;AAA8F,UAAA,WAAW,EAAC,QAA1G;AAAmH,UAAA,IAAI,EAAC;AAAxH;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAnCQnB,kB;;KAAAA,kB;AAqCT,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction AddTransactionForm() {\n  const [date, setDate] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [category, setCategory] = useState(\"\")\n  const [amount, setAmount] = useState(\"\")\n  function handleSubmit(e) {\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date: date,\n        description: description,\n        category: category,\n        amount: amount,\n      }),\n    });\n     alert(\"added successfully\")\n  }\n  return (\n    <div className=\"ui segment\">\n      <form onSubmit={handleSubmit} className=\"ui form\">\n        <div className=\"inline fields\">\n          <input value={date} onChange={(e) => setDate(e.target.value)} type=\"date\" name=\"date\" />\n          <input value={description} onChange={(e) => setDescription(e.target.value)} type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input value={category} onChange={(e) => setCategory(e.target.value)} type=\"text\" name=\"category\" placeholder=\"Category\" />\n          <input value={amount} onChange={(e) => setAmount(e.target.value)} type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;"]},"metadata":{},"sourceType":"module"}