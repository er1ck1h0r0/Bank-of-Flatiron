{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/eric/Development/code/phase-2/Challenge-1-Bank-of-Flatiron-021023 (1)/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nfunction AddTransactionForm() {\n  _s();\n\n  const [formData, setFormData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\"\n  });\n\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      formData,\n      [name]: value\n    });\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(() => {\n      setFormData({\n        date: \"\",\n        description: \"\",\n        category: \"\",\n        amount: \"\"\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.date,\n          onChange: handleChange,\n          type: \"date\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.description,\n          onChange: handleChange,\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.category,\n          onChange: handleChange,\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: formData.amount,\n          onChange: handleChange,\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"t8ki82JghsVHW9Eb1uyiqtc0mw4=\");\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/home/eric/Development/code/phase-2/Challenge-1-Bank-of-Flatiron-021023 (1)/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AddTransactionForm.js"],"names":["React","useState","AddTransactionForm","formData","setFormData","date","description","category","amount","handleChange","e","name","value","target","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,SAASC,kBAAT,GAA8B;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC;AACvCI,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,WAAW,EAAE,EAF0B;AAGvCC,IAAAA,QAAQ,EAAE,EAH6B;AAIvCC,IAAAA,MAAM,EAAE;AAJ+B,GAAD,CAAxC;;AAOA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAT,IAAAA,WAAW,CAAC;AACVD,MAAAA,QADU;AAEV,OAACQ,IAAD,GAAQC;AAFE,KAAD,CAAX;AAID;;AAED,QAAME,YAAY,GAAIJ,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACK,cAAF;AACAC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAelB,QAAf;AALoC,KAAvC,CAAL,CAMGmB,IANH,CAMQ,MAAM;AACZlB,MAAAA,WAAW,CAAC;AACVC,QAAAA,IAAI,EAAE,EADI;AAEVC,QAAAA,WAAW,EAAE,EAFH;AAGVC,QAAAA,QAAQ,EAAE,EAHA;AAIVC,QAAAA,MAAM,EAAE;AAJE,OAAD,CAAX;AAMD,KAbD;AAcD,GAhBD;;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAA8B,MAAA,SAAS,EAAC,SAAxC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAO,UAAA,KAAK,EAAEX,QAAQ,CAACE,IAAvB;AAA6B,UAAA,QAAQ,EAAEI,YAAvC;AAAqD,UAAA,IAAI,EAAC,MAA1D;AAAiE,UAAA,IAAI,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,KAAK,EAAEN,QAAQ,CAACG,WAAvB;AAAoC,UAAA,QAAQ,EAAEG,YAA9C;AAA4D,UAAA,IAAI,EAAC,MAAjE;AAAwE,UAAA,IAAI,EAAC,aAA7E;AAA2F,UAAA,WAAW,EAAC;AAAvG;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,KAAK,EAAEN,QAAQ,CAACI,QAAvB;AAAiC,UAAA,QAAQ,EAAEE,YAA3C;AAAyD,UAAA,IAAI,EAAC,MAA9D;AAAqE,UAAA,IAAI,EAAC,UAA1E;AAAqF,UAAA,WAAW,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAO,UAAA,KAAK,EAAEN,QAAQ,CAACK,MAAvB;AAA+B,UAAA,QAAQ,EAAEC,YAAzC;AAAuD,UAAA,IAAI,EAAC,QAA5D;AAAqE,UAAA,IAAI,EAAC,QAA1E;AAAmF,UAAA,WAAW,EAAC,QAA/F;AAAwG,UAAA,IAAI,EAAC;AAA7G;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAjDQP,kB;;KAAAA,kB;AAmDT,eAAeA,kBAAf","sourcesContent":["import React, { useState } from \"react\";\n\n\nfunction AddTransactionForm() {\n  const [formData, setFormData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\"\n  });\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setFormData({\n      formData,\n      [name]: value\n    });\n  } \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(() => {\n      setFormData({\n        date: \"\",\n        description: \"\",\n        category: \"\",\n        amount: \"\"\n      });\n    });\n  };\n\n  return (\n    <div className=\"ui segment\">\n      <form onSubmit={handleSubmit} className=\"ui form\">\n        <div className=\"inline fields\">\n          <input value={formData.date} onChange={handleChange} type=\"date\" name=\"date\" />\n          <input value={formData.description} onChange={handleChange} type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input value={formData.category} onChange={handleChange} type=\"text\" name=\"category\" placeholder=\"Category\" />\n          <input value={formData.amount} onChange={handleChange} type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n"]},"metadata":{},"sourceType":"module"}