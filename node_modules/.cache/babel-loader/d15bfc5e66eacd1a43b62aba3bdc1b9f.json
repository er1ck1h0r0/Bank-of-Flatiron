{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/eric/Development/code/phase-2/Challenge-1-Bank-of-Flatiron-021023 (1)/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AddTransactionForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useInput from \"./\";\nimport Transaction from \"./Transaction\";\n\nfunction AddTransactionForm() {\n  _s();\n\n  const [date, setDate] = useInput(\"\");\n  const [description, setDescription] = useInput(\"\");\n  const [category, setCategory] = useInput(\"\");\n  const [amount, setAmount] = useInput(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date,\n        description,\n        category,\n        amount\n      })\n    }).then(() => {\n      alert(\"Added successfully\"); // Clear form after successful submission\n\n      setDate(\"\");\n      setDescription(\"\");\n      setCategory(\"\");\n      setAmount(\"\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"ui form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...setDate,\n          type: \"date\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...setDescription,\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...setCategory,\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...setAmount,\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddTransactionForm, \"1khofaYMyAD2MCkUgcPRBOi1QFM=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/home/eric/Development/code/phase-2/Challenge-1-Bank-of-Flatiron-021023 (1)/Challenge-1-Bank-of-Flatiron/code-challenge/src/components/AddTransactionForm.js"],"names":["React","useInput","Transaction","AddTransactionForm","date","setDate","description","setDescription","category","setCategory","amount","setAmount","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","alert"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,IAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,kBAAT,GAA8B;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASW,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAK1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBhB,QAAAA,IADmB;AAEnBE,QAAAA,WAFmB;AAGnBE,QAAAA,QAHmB;AAInBE,QAAAA;AAJmB,OAAf;AALoC,KAAvC,CAAL,CAWGW,IAXH,CAWQ,MAAM;AACZC,MAAAA,KAAK,CAAC,oBAAD,CAAL,CADY,CAEZ;;AACAjB,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,SAAS,CAAC,EAAD,CAAT;AACD,KAlBD;AAmBD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAA8B,MAAA,SAAS,EAAC,SAAxC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE,sBAAWP,OAAX;AAAoB,UAAA,IAAI,EAAC,MAAzB;AAAgC,UAAA,IAAI,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,sBAAWE,cAAX;AAA2B,UAAA,IAAI,EAAC,MAAhC;AAAuC,UAAA,IAAI,EAAC,aAA5C;AAA0D,UAAA,WAAW,EAAC;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,sBAAWE,WAAX;AAAwB,UAAA,IAAI,EAAC,MAA7B;AAAoC,UAAA,IAAI,EAAC,UAAzC;AAAoD,UAAA,WAAW,EAAC;AAAhE;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,sBAAWE,SAAX;AAAsB,UAAA,IAAI,EAAC,QAA3B;AAAoC,UAAA,IAAI,EAAC,QAAzC;AAAkD,UAAA,WAAW,EAAC,QAA9D;AAAuE,UAAA,IAAI,EAAC;AAA5E;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA5CQR,kB;UACiBF,Q,EACcA,Q,EACNA,Q,EACJA,Q;;;KAJrBE,kB;AA8CT,eAAeA,kBAAf","sourcesContent":["import React from \"react\";\nimport useInput from \"./\"\nimport Transaction from \"./Transaction\";\n\nfunction AddTransactionForm() {\n  const [date, setDate] = useInput(\"\");\n  const [description, setDescription] = useInput(\"\");\n  const [category, setCategory] = useInput(\"\");\n  const [amount, setAmount] = useInput(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        date,\n        description,\n        category,\n        amount\n      })\n    }).then(() => {\n      alert(\"Added successfully\");\n      // Clear form after successful submission\n      setDate(\"\");\n      setDescription(\"\");\n      setCategory(\"\");\n      setAmount(\"\");\n    });\n  }\n\n  return (\n    <div className=\"ui segment\">\n      <form onSubmit={handleSubmit} className=\"ui form\">\n        <div className=\"inline fields\">\n          <input {...setDate} type=\"date\" name=\"date\" />\n          <input {...setDescription} type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input {...setCategory} type=\"text\" name=\"category\" placeholder=\"Category\" />\n          <input {...setAmount} type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n"]},"metadata":{},"sourceType":"module"}